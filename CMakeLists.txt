cmake_minimum_required (VERSION 3.0)
project (SUPERLU_DIST VERSION 4.1 LANGUAGES C Fortran)

option(BUILD_TESTS "${PROJECT_NAME} - Build tests" ON)
set(PACKAGE_CONFIG_DIR "lib/cmake" CACHE STRING "Directory for package config files (relative to CMAKE_INSTALL_PREFIX)")
set(BUILD_PRECISION dz CACHE STRING "${PROJECT_NAME} - Build precisions (d|z|dz)")
option(USE_PARMETIS "Use ParMETIS library (includes use of METIS)" ON)
option(USE_METIS "Use METIS library" OFF)
option(WITH_OPENMP "${PROJECT_NAME} - Use OpenMP" ON)

find_package(BLAS ${BLAS_VERSION} REQUIRED)
if (USE_PARMETIS)
    find_package(PARMETIS ${PARMETIS_VERSION} REQUIRED)
elseif(USE_METIS)
    find_package(METIS ${METIS_VERSION} REQUIRED)
endif()

find_package(MPI REQUIRED)
if (MPI_C_COMPILER)
    SET(CMAKE_C_COMPILER ${MPI_C_COMPILER})
endif()
if (MPI_Fortran_COMPILER)
    SET(CMAKE_Fortran_COMPILER ${MPI_Fortran_COMPILER})
endif()
if (WIN32)
    include_directories(${MPI_C_INCLUDE_PATH})
endif()
SET(CMAKE_C_FLAGS "-std=c99 -Wno-format -Wno-error=format-security")
SET(CMAKE_C_FLAGS_RELEASE "-O3") # not recognized: -w2 -mkl
SET(CMAKE_C_FLAGS_DEBUG "-O0 -Wall")

if (WITH_OPENMP)
  find_package(OpenMP)
  if (OPENMP_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} ${OpenMP_Fortran_FLAGS}")
  else()
    message(WARNING "OpenMP requested but not found. Skipping.")
  endif()
endif()

# collecting source file defs in subdirectory
add_subdirectory(SRC)
if (USE_PARMETIS OR USE_METIS)
    add_subdirectory(FORTRAN)
    
    if (BUILD_TESTS)
        enable_testing()
        add_subdirectory(EXAMPLE)
    endif()
else()
    message(WARNING "USE_PARMETIS and USE_METIS are disabled. Not building examples as the default option is metis ordering.")
endif()